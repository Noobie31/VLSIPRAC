// ===============================
// Full Adder – Behavioral modeling
// ===============================
module full_adder_behavioral (
    input  wire A,       // operand bit
    input  wire B,       // operand bit
    input  wire C_in,    // carry in
    output reg  S,       // sum
    output reg  C_out    // carry out
);
    always @* begin
        {C_out, S} = A + B + C_in;   // synthesizable behavioral style
    end
endmodule

// ============================
// Full Adder – Dataflow model
// ============================
module full_adder_dataflow (
    input  wire A,
    input  wire B,
    input  wire C_in,
    output wire S,
    output wire C_out
);
    assign S     = A ^ B ^ C_in;
    assign C_out = (A & B) | (A & C_in) | (B & C_in);
endmodule
